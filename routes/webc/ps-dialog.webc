<script webc:setup>
	const buildAction = ({ relativePath }) => `/update/${relativePath}`;
	const checkSelected = (lane, task) => {
		lane === task.lane ? 'selected' : 'false';
	}
</script>

<dialog open class="stack outline">
	<header class="repel box">
		<h3 @text="task.filePath"></h3>

		<form method="get" action="/">
			<button type="submit">
				<span>Close</span>
			</button>
		</form>
	</header>

	<div class="tabs">
		<label for="modeToggleView">View</label>
		<label for="modeToggleEdit">Edit</label>
	</div>

	<div class="pane">
		<input type="radio" id="modeToggleView" name="mode-toggle" value="view" form="updateForm" checked="checked">
		<input type="radio" id="modeToggleEdit" name="mode-toggle" value="edit" form="updateForm">

		<div class="view box" @html="task.content"></div>
		<textarea class="box" name="content" id="content" form="updateForm" @html="task.rawContents"></textarea>
	</div>

	<footer class="box">
		<form id="updateForm" method="post" :action="buildAction(task)">
			<label for="lane">Lane</label>
			<select id="lane" name="lane">
				<option webc:for="lane of lanes" :selected="checkSelected(lane[0], task)" :value="lane[0]" @text="lane[1]">{{ lane[1] }}</option>
			</select>

			<button type="submit">Save</button>
		</form>
	</footer>
</dialog>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const dialog = document.querySelector('dialog');
		dialog.removeAttribute('open');

		dialog.showModal();

		dialog.addEventListener('click', ({ target }) => {
			target === dialog && dialog.close();
			window.history.replaceState({}, '', '/');
		});
	});
</script>

<noscript>
	<style>
	/* ::backdrop doesn't exist unless dialog opened with .showModal() */
	body:has(> dialog[open]) {
		overflow: hidden;

		&::before {
			content: '';
			position: fixed;
			inset: 0;
			background-color: rgba(0, 0, 0, 0.15);
			z-index: calc(infinity);

			-webkit-backdrop-filter: blur(5px);
			backdrop-filter: blur(5px);
		}
	}

	dialog[open] {
		position: absolute;
		inset: 0;
		z-index: calc(infinity + 1);
	}

	</style>
</noscript>

<style>
dialog::backdrop {
	-webkit-backdrop-filter: blur(5px);
	backdrop-filter: blur(5px);
	background-color: rgba(0,0,0,0.3);
}

dialog[open] {
	--gap: 0;

	border-radius: var(--radius-100);
	border: none;
	padding: 0;
	overflow: scroll;
	max-height: 80dvh;
	max-width: calc(70ch + 2 * var(--spacing-100));
	min-width: min(90vw, 70ch);

	& footer {
		background-color: light-dark(var(--color-gray-100), var(--color-gray-800));
	}

	& > div, textarea {
		> *:first-child {
			margin-block-start: 0;
		}
	}
}

dialog:not([open]) {
	display: none;
}

.tabs {
	display: flex;
	border-bottom: 1px solid light-dark(var(--color-gray-300), var(--color-gray-700));

	label {
		cursor: pointer;
		padding: var(--spacing-50) var(--spacing-100);
		border: 1px solid light-dark(var(--color-gray-300), var(--color-gray-700));
		border-bottom: none;
	}
}

.pane {
	position: relative;
	overflow-y: scroll;

	.view {
		position: relative;
		background-color: light-dark(var(--color-white), var(--color-gray-800));
	}

	textarea {
		border: none;
		position: absolute;
		inset: 0;
		font-family:Consolas,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New, monospace;
	}
}

input[name="mode-toggle"] {
	display: none;

	&[value="view"]:checked ~ div {
		z-index: 1;
	}

	&[value="edit"]:checked ~ textarea {
		z-index: 1;
	}
}

dialog:has(input[value="view"]:checked) {
	label[for="modeToggleView"] {
		background-color: light-dark(var(--color-gray-300), var(--color-gray-700));
	}
}

dialog:has(input[value="edit"]:checked) {
	label[for="modeToggleEdit"] {
		background-color: light-dark(var(--color-gray-300), var(--color-gray-700));
	}
}
</style>
